#!/usr/bin/env ruby

#
# Terminus-Bot: An IRC bot to solve all of the problems with IRC bots.
#
# Copyright (C) 2010-2012 Kyle Johnson <kyle@vacantminded.com>, Alex Iadicicco
# (http://terminus-bot.net/)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

unless RUBY_VERSION.start_with? "1.9"
  puts "Ruby version 1.9 is required."
  exit -1
end

require 'thread'
require 'logger'
require 'eventmachine'

$log = Logger.new(STDOUT)

# TODO: Parse more options, such as --help, and do it correctly.

$log.level = Logger::INFO

if ARGV.length == 1
  $log.level = Logger::DEBUG if ARGV.shift == "-v"
end

Dir.chdir(File.dirname(__FILE__))

VERSION  = "Terminus-Bot v0.7"
PID_FILE = "var/terminus-bot.pid"
LICENSE  = "MIT"

$log.info('preload') { VERSION }
$log.info('preload') { "<http://terminus-bot.net/>" }
$log.info('preload') { "Released under #{LICENSE}." }

unless Dir.exists? "var"
  Dir.mkdir "var"
end

if File.exists? PID_FILE
  begin
    pid = File.read(PID_FILE).to_i

    $log.debug('preload') { "Found PID file with: #{pid}" }

    if Process.kill(0, pid)
      $log.fatal('preload') { "Already running as #{pid}" }
      exit
    end
  rescue
    # We're good to go. I think.
  end

  $log.warn('preload') { "PID file appears to be stale. Deleting." }
  File.delete(PID_FILE)
end


$log.info("preload") { "Loading core files." }

def load_includes

  # These have to be first.
  load "includes/flags.rb"
  #load "includes/database.rb"

  load "includes/config.rb"
  load "includes/events.rb"

  load "includes/string.rb"
  load "includes/time.rb"

  load "includes/users.rb"
  load "includes/ircconnection.rb"
  load "includes/message.rb"
  load "includes/channels.rb"
  load "includes/commands.rb"

  # These have to be last (in this order).
  load "includes/modules.rb"
  load "includes/scripts.rb"
  load "includes/core.rb"

end


load_includes

# TODO: Verify configuration and check for database corruption.

# Launch!
pid = fork do
  EM.run do
    Bot.run
  end
end

# Bot.run changes $log to something else, so just puts this.
puts "Terminus-Bot started as #{pid}. Writing to #{PID_FILE}"

File.open(PID_FILE, "w") {|f| f.puts pid}
Process.detach pid

